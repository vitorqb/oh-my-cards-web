{:source-paths ["src" "test"]
 :dependencies [[binaryage/devtools "1.0.2"]
                [nrepl "0.7.0"]
                [reagent "0.10.0"]
                [cider/cider-nrepl "0.25.2"]
                [metosin/reitit-frontend "0.5.2"]
                [org.clojure/core.async "1.0.567"]
                [cljs-http "0.1.46"]
                [com.rpl/specter "1.1.3"]
                [pjstadig/humane-test-output "0.10.0"]
                [refactor-nrepl "2.5.0"]
                [medley "1.3.0"]]

 :builds {:app {:target     :browser
                :output-dir "public/js"
                :asset-path "/js"
                :modules    {:app {:entries [ohmycards.web.core]}}
                :devtools   {:after-load   ohmycards.web.core/mount-root
                             :preloads     [pjstadig.humane-test-output
                                            dev.core]
                             :repl-init-ns dev.core
                             :repl-pprint  true}
                :dev        {;; This allows us to use with-redefs for multi arit fns
                             ;; see https://clojure.atlassian.net/browse/CLJS-1623
                             :compiler-options {:static-fns false}
                             :closure-defines {ohmycards.web.globals/DEV true
                                               ohmycards.web.globals/LOG_ENABLED true
                                               ohmycards.web.globals/HOSTNAME "127.0.0.1"
                                               ohmycards.web.globals/PORT 3002}}}

          :test {:target           :karma
                 :output-to        "target/test.js"
                 :ns-regexp        "-test$"
                 :compiler-options {:static-fns false}
                 :closure-defines  {ohmycards.web.globals/DEV true}}

          :browser-test {:target :browser-test
                         :test-dir "target/browser-test"
                         :compiler-options {:static-fns false}}}

 :nrepl {:middleware [refactor-nrepl.middleware/wrap-refactor]}
 
 :dev-http {9001 {:root    "public"
                  :handler user/app}
            9050 {:root "target/browser-test"}}}
